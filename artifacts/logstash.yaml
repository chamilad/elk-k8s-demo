apiVersion: v1
kind: List
items:
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: logstash
    labels:
      app: logstash
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: logstash
    template:
      metadata:
        labels:
          app: logstash
      spec:
        volumes:
        - name: logstash-config
          configMap:
            name: logstash-config
        containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.3.2 
          ports:
          - containerPort: 5044
          volumeMounts:
            - name: logstash-config
              mountPath: /usr/share/logstash/pipeline
              readOnly: true
# ========================================================================
- kind: Service
  apiVersion: v1
  metadata:
    name: logstash
    labels:
      app: logstash
  spec:
    selector:
      app: logstash
    ports:
      - protocol: TCP
        port: 5044
        targetPort: 5044
# ========================================================================
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: logstash-config
    labels:
      app: logstash
  data:
    logstash.conf: |
      input {
        beats {
          port => 5044
        }
      }

      filter {
        if "nginx" in [kubernetes][labels][app] {
          grok {
           match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)"  } 
           overwrite => ["message"]
           add_tag => [ "groked" ]
          } 
       }
      }

      output {
        if "" in [kubernetes][labels][app] {
          stdout {}
        }
       
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "logstash-%{+YYYY.MM.dd}-%{[kubernetes][namespace]}"
        }
      }
# ========================================================================

 
